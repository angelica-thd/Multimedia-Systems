v = VideoReader('catvideo.mp4')
[rows,cols,rgb] = size(readFrame(v));  %use one frame to store the size of rows,cols and color array
count = 0;
while rem(rows,16)~=0
    count = count+1;
    rows = rows+1;  %count how many rows are missing from the frames in order for mod(rows,16) = 0
end
tmp = zeros(1,cols,rgb);

%initialize matrices
for k = 1:4
    differ{k} = zeros(16,16,3);
    sad{k} = zeros(16,16,3);
end

for i = 1:v.NumFrames
    targ = read(v,i);
    %divide current frame into 16x16 macroblocks
    targ = [targ; repmat(tmp,count,1)]; %add 0-rows to each frame
    trgtBlock{i} = mat2cell(targ,16*ones(1,rows/16),16*ones(1,cols/16),rgb);  %divide each frame into a cellarray of 16 blocks
    target = trgtBlock{i};
    
    %show original-framed video
    figure(1)
    subplot(3,2,1);
    image(target);
    caption = sprintf('Original frame %d of %d.',i,v.NumFrames);
    title(caption,'FontSize',10);
    drawnow;
    
    if i>1 && i<v.NumFrames
        %divide previous block into 16x16 macroblocks
        reference = read(v,i-1);
        reference = [prev; repmat(tmp,count,1)];
        refBlock{i} = mat2cell(reference,16*ones(1,rows/16),16*ones(1,cols/16),rgb);
        ref = refBlock{i};
        
        %predict next frame using SAD metric
        for r = 1:size(target,1)
            for c = 1:size(target,2)
             [kRows,kCols] = kCoordinates(r,c);                  
                for k = 1:size(kRows)
                    tmpRow = r+kRows(k);
                    tmpCol = c+kCols(k);                 
                    differ{k} = abs(cell2mat(target(r,c)) - cell2mat(ref(tmpRow,tmpCol)));
                    sad{k}  = cell2mat(sad(k)) + double(cell2mat(differ(k)));                   
                end
               min  = minimumSAD(sad);
               next{r,c} = ref{r+kRows(min),c+kCols(min)};
               frames{i} = next;
            end                        
        end
        %show predicted-framed video
        figure(1)
        subplot(3,2,2);
        image(cell2mat(frames{i}));
        caption = sprintf('Reconctructed frame %d of %d.',i+1,v.NumFrames);
        title(caption,'FontSize',10);
        drawnow;
        
        %show error frames
        figure(1)
        subplot(3,2,[3,4]);
        error = curr - cell2mat(frames{i});
        image(error);
        caption = sprintf('Error frame %d of %d.',i+1,v.NumFrames);
        title(caption,'FontSize',10);
        drawnow;
        
        %calculating the entropy of the predicted frames
        reconEnt(i) = entropy(error);
        figure(1)
        subplot(3,2,6)
        plot(reconEnt,'LineWidth',2);
        xlim([0 111]);
        title('Entropy of error frames.','FontSize',10);
    end
    
    %calculating the entropy of the original frames
    originalEnt(i) = entropy(read(v,i));
    figure(1)
    subplot(3,2,5);
    plot(originalEnt,'LineWidth', 2);
    xlim([0 111]);
    title('Entropy of original frames.','FontSize',10);
end  
        







